import Head from "next/head";
import Article from "../../db/models/Article";
import Image from "next/image";
import styled from "@emotion/styled";

const ArticleContainer = styled.div`
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 20px;
  justify-content: center;
  width: 70%;
  align-items: center;
  margin: 50px auto;
`;

const ArticleCard = styled.div`
  display: flex;
  flex-direction: column;
  border: 1px solid #8080807a;
  border-radius: 8px;
  padding: 10px;
  min-height: 400px;
  justify-content: space-evenly;
  text-align: center;
  box-shadow: rgb(82 81 81 / 34%) 0px 2px 8px 0px;
`;

interface ArticleData {
  id: number;
  title: string;
  content: string;
  author: string;
  category: string;
  image: string;
  createdAt?: string;
  updatedAt?: string;
}

interface HomeProps {
  articleData: ArticleData[];
}

const Home: React.FC<HomeProps> = ({ articleData }) => {
  return (
    <>
      <Head>
        <title>NewsHub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <ArticleContainer>
          {articleData.map((singleArticle: ArticleData) => (
            <ArticleCard key={singleArticle.id}>
              <Image
                src={singleArticle.image}
                alt="Artcile Image"
                width={200}
                height={200}
                layout="responsive"
              />
              <h3>{singleArticle.title}</h3>
              <p>{singleArticle.author}</p>
              <p>{singleArticle.updatedAt}</p>
            </ArticleCard>
          ))}
        </ArticleContainer>
      </main>
    </>
  );
};

// This gets called on every request
export async function getServerSideProps() {
  const allArticles = await Article.findAll();
  const articleData = allArticles.map((article) => ({
    id: article.id,
    title: article.title,
    content: article.content,
    author: article.author,
    category: article.category,
    image: article.image,
    createdAt: article.createdAt.toISOString(), // Convert to string
    updatedAt: article.updatedAt.toISOString(), // Convert to string
  }));
  return { props: { articleData } };
}

export default Home;
